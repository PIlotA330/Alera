// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  username        String   @unique
  email           String   @unique
  password        String
  dateLastSignedIn DateTime @default(now())
  dateSignedUp    DateTime @default(now())
  gender          String
  location        String
  birthdate       DateTime
  diagnosisDate   DateTime
  diseases        Disease[] @relation(fields: [diseaseIds], references: [id])
  diseaseIds      String[]  @db.ObjectId
  symptoms        Symptom[]
  posts           Blog[]
  medications     Medication[]
  specialty       String?
}

model Disease {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  users           User[]   @relation(fields: [userIds], references: [id])
  userIds         String[] @db.ObjectId
  blogs           Blog[]
}

model Symptom {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @db.ObjectId
  type            String
  severityStr     String?
  severityNum     Int?
  treatmentUsed   String?
  frequency       Int?
  duration        Int?
  bloodPressure   Int?
  durationPerDay  Int?
  energyLevel     Int?
  trigger         String?
  location        String?
  timestamp       DateTime   @default(now())
}

model Blog {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  user            User     @relation(fields: [userid], references: [id])
  userid          String   @db.ObjectId
  comments        Comment[]
  contents        String
  public          Boolean
  disease         Disease   @relation(fields: [diseaseid], references: [id])
  diseaseid       String     @db.ObjectId
}

model Comment {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userid          String   @db.ObjectId
  parentblog        Blog  @relation(fields: [parentblogid], references: [id])
  parentblogid     String   @db.ObjectId
  contents        String
  groupid           String  @db.ObjectId
  public          Boolean
}

model Medication {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  user            User     @relation(fields: [userid], references: [id])
  userid          String   @db.ObjectId
  dosage        Int
  frequencyPerDay     Int
  frequencyPerWeek    Int
}