// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid()) @map("_id") @db.ObjectId
  name            String
  username        String   @unique
  email           String   @unique
  password        String
  dateLastSignedIn DateTime
  dateSignedUp    DateTime
  disease         String[]
  gender          String
  location        String
  birthdate       DateTime
  diagnosisDate   DateTime
  diseases        Disease[] @relation(fields: [diseaseIds], references: [id])
  diseaseIds      String[]  @db.ObjectId
  symptoms        Symptom[]
  symptomIds      String[]  @db.ObjectId
  posts           Blog[]
  postIds         String[]  @db.ObjectId
}

model Disease {
  id              String   @id @default(cuid()) @map("_id") @db.ObjectId
  users           User[]   @relation(fields: [userIds], references: [id])
  userIds         String[] @db.ObjectId
  usersId         String[] @db.ObjectId
}

model Symptom {
  id              String   @id @default(cuid()) @map("_id") @db.ObjectId
  users           User     @relation(fields: [userId], references: [id])
  userId          String   @db.ObjectId
  type            String
  severity        String
  durationPerDay  Int?
  energyLevel     Int?
  impactedActivities String[]
  triggers        String[]
  timestamp       DateTime
}

model Blog {
  id              String   @id @default(cuid()) @map("_id") @db.ObjectId
  title           String
  user            User     @relation(fields: [userid], references: [id])
  userid          String   @db.ObjectId
  comments        Comment[]
  commentsIds     String[]   @db.ObjectId
  contents        String
  group           String
}

model Comment {
  id              String   @id @default(cuid()) @map("_id") @db.ObjectId
  userid          String
  parentblog        Blog  @relation(fields: [parentblogid], references: [id])
  parentblogid     String   @db.ObjectId
  contents        String
  group           String
  public          Boolean
}

